import telebot
from telebot import types
import requests
from bs4 import BeautifulSoup
import time
from datetime import datetime
import gspread
from oauth2client.service_account import ServiceAccountCredentials



API_TOKEN = 'TOKEN'
bot = telebot.TeleBot(API_TOKEN)


scope = ["https://spreadsheets.google.com/feeds",
         "https://www.googleapis.com/auth/spreadsheets",
         "https://www.googleapis.com/auth/drive.file",
         "https://www.googleapis.com/auth/drive"]

creds = ServiceAccountCredentials.from_json_keyfile_name("path_to_jsonServiceAccGoogle", scope)
client = gspread.authorize(creds)
sheet = client.open("News").sheet1


# –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø–∞—Ä—Å–∏–Ω–≥–∞ –∑–∞–≥–æ–ª–æ–≤–∫–æ–≤ RU –∏ KZ –∑–æ–Ω
def get_ru_headlines():
    try:
        url = "https://ria.ru/world/"
        response = requests.get(url)
        soup = BeautifulSoup(response.text, 'html.parser')
        headlines = soup.find_all('a', class_='list-item__title')

        return [headline.get_text() for headline in headlines]
    except Exception as e:
        print('–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ get_ru_headlines')
        print(e)
        print('\n')

def get_kz_headlines():
    try:
        url = "https://www.nur.kz/"
        response = requests.get(url)
        soup = BeautifulSoup(response.text, 'html.parser')
        headlines = soup.find_all('a', class_='js-article-link article-link')

        return [headline.get_text() for headline in headlines]
    except Exception as e:
        print('–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ get_kz_headlines')
        print(e)
        print('\n')


@bot.message_handler(commands=['start'])
def send_welcome(message):
    news_markup = types.InlineKeyboardMarkup(row_width=1)
    news_markup.add(types.InlineKeyboardButton("üá∑üá∫ –†–æ—Å—Å–∏—è", callback_data="ru"))
    news_markup.add(types.InlineKeyboardButton("üá∞üáø –ö–∞–∑–∞—Ö—Å—Ç–∞–Ω", callback_data="kz"))
    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –≤ –Ω–∞—à–µ–º –ù–æ–≤–æ—Å—Ç–Ω–æ–º –±–æ—Ç–µ!\n–í—ã–±–µ—Ä–∏ —Å—Ç—Ä–∞–Ω—É, –∏–∑ –∫–æ—Ç–æ—Ä–æ–π —Ö–æ—á–µ—à—å –ø–æ–ª—É—á–∏—Ç—å –Ω–æ–≤–æ—Å—Ç–∏:", reply_markup=news_markup)


# –¢—É—Ç —Ä–µ—à–∏–ª –Ω–µ–º–Ω–æ–≥–æ —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—Ç—å –∑–∞–¥–∞—á—É, —Ä–∞—Å—à–∏—Ä–∏–≤ –µ—ë –ø—É—Ç—ë–º –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –¥–≤—É—Ö —Å—Ç—Ä–∞–Ω –Ω–∞ –≤—ã–±–æ—Ä
@bot.callback_query_handler(func=lambda c: c.data and c.data.startswith('ru') or c.data.startswith('kz'))
def process_callback_country_menu(callback_query: types.CallbackQuery):
    try:
        country = str(callback_query.data)
        if country == 'ru':
            headlines = get_ru_headlines()
            now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

            for headline in headlines:
                sheet.append_row([now, headline, country])

            bot.send_message(callback_query.from_user.id, "–ó–∞–≥–æ–ª–æ–≤–∫–∏ RU –Ω–æ–≤–æ—Å—Ç–µ–π –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É.")
        else:
            headlines = get_kz_headlines()
            now = datetime.now().strftime("%Y-%m-%d %H:%M:%S")

            for headline in headlines:
                sheet.append_row([now, headline, country])

            bot.send_message(callback_query.from_user.id, "–ó–∞–≥–æ–ª–æ–≤–∫–∏ KZ –Ω–æ–≤–æ—Å—Ç–µ–π –¥–æ–±–∞–≤–ª–µ–Ω—ã –≤ —Ç–∞–±–ª–∏—Ü—É.")
    except Exception as e:
        print('–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ process_callback_country_menu')
        print(e)
        print('\n')


# –≠—Ç—É –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—é –≤—ã–≤–æ–¥–∏–ª –º–µ—Ç–æ–¥–æ–º –ø—Ä–æ–± –∏ –æ—à–∏–±–æ–∫ –Ω–∞ –ø—Ä–æ—Ç—è–∂–µ–Ω–∏–∏ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–µ—Å—è—Ü–µ–≤ :D
if __name__ == "__main__":
    while True:
        try:
            bot.polling(none_stop=True, timeout=999)
        except Exception as ex:
            print(ex)
            time.sleep(10)
